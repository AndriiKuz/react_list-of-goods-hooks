{"version":3,"sources":["App.tsx","index.tsx"],"names":["Sort","goodsFromServer","App","useState","DEFAULT","sortField","setSortField","isReversed","setIsReversed","goods","condition","goodsCopy","sort","a","b","ALPHABETICALLY","localeCompare","BY_LENGTH","length","reverse","getSortedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAOKA,E,6EAAAA,K,WAAAA,E,qCAAAA,E,4BAAAA,M,KAME,IAAMC,EAA0B,CACrC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAsBWC,EAAgB,WAC3B,MAAkCC,mBAASH,EAAKI,SAAhD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAvBe,SAACC,EAAiBH,GACvC,IAAMI,EAAS,UAAOV,GAetB,OAbAU,EAAUC,MAAK,SAACC,EAAGC,GACjB,OAAQJ,GACN,KAAKV,EAAKe,eACR,OAAOF,EAAEG,cAAcF,GAEzB,KAAKd,EAAKiB,UACR,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,QACE,OAAO,MAINX,EAAaI,EAAUQ,UAAYR,EAOpBS,CAAef,EAAWE,GAOhD,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYlB,IAAcL,EAAKe,iBAEnCS,QAAS,kBAAMlB,EAAaN,EAAKe,iBAPnC,iCAYA,wBACEO,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYlB,IAAcL,EAAKiB,YAEnCO,QAAS,kBAAMlB,EAAaN,EAAKiB,YAPnC,4BAYA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAahB,IAEjBiB,QAAS,kBAAMhB,GAAeD,IAPhC,sBAYEF,GAAaE,IAEX,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAjDE,WACZhB,GAAc,GACdF,EAAaN,EAAKI,UA4CV,sBAUN,6BACGK,EAAMgB,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC5GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.337cfb81.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\ntype Good = string;\n\nenum Sort {\n  DEFAULT = '',\n  ALPHABETICALLY = 'sort alphabetically',\n  BY_LENGTH = 'sort by length',\n}\n\nexport const goodsFromServer: Good[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst getSortedGoods = (condition: Sort, isReversed: boolean) => {\n  const goodsCopy = [...goodsFromServer];\n\n  goodsCopy.sort((a, b) => {\n    switch (condition) {\n      case Sort.ALPHABETICALLY:\n        return a.localeCompare(b);\n\n      case Sort.BY_LENGTH:\n        return a.length - b.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  return isReversed ? goodsCopy.reverse() : goodsCopy;\n};\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(Sort.DEFAULT);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const goods: Good[] = getSortedGoods(sortField, isReversed);\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortField(Sort.DEFAULT);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortField !== Sort.ALPHABETICALLY },\n          )}\n          onClick={() => setSortField(Sort.ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortField !== Sort.BY_LENGTH },\n          )}\n          onClick={() => setSortField(Sort.BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}